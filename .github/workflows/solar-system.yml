name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
# env:
#   MONGO_USERNAME:  superuser
#   MONGO_URI: ${{vars.MONGO_URI}}
#   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
          MONGO_URI: 'mongodb//localhost:27017/superData'
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password

        container: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v3
        #   with:
        #     node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing  
          run: npm test
          continue-on-error: true
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

        - name:  Cache NPM dependencies
          uses: actions/cache@v3
          with:
            key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
            path: ~/.npm
    docker:
      runs-on: ubuntu-latest
      needs: [unit-testing]
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Docker Login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: LIGHTHINGS
            password: ${{secrets.GITHUB_TOKEN}}
        - name: Docker Build
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: 'ghcr.io/lighthings/solar-system:${{github.sha}}'
    slack_report:
      runs-on: ubuntu-latest
      if: always()
      needs: [unit-testing, docker]
      steps:
      - uses: actions/checkout@v4
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          SLACK_CHANNEL: github_action_report_channel
          SLACK_COLOR: ${{job.status}}
          SLACK_ICON: ''
          SLACK_MESSAGE: ':hammer_and_wrench: Triggered by ${{github.actor}}'
          SLACK_TITLE: Information

